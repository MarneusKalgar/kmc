{"version":3,"sources":["webpack:///./node_modules/@glidejs/glide/dist/glide.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/smooth-scroll/dist/smooth-scroll.polyfills.min.js"],"names":["__webpack_require__","r","__webpack_exports__","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","call","possibleConstructorReturn","self","ReferenceError","toInt","value","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","define","prop","definition","EventsBus","events","undefined","this","hop","event","handler","on","index","push","remove","context","emit","forEach","item","Glide$2","Glide","selector","options","_c","_e","disabled","settings","mergeOptions","extensions","glide","components","name","_name","mount","pattern","Run","make","distance","Transition","disable","Move","interval","get","_o","set","o","_i","_d","status","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","n","parentNode","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","EventsBinder","listeners","el","closure","addEventListener","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","MUTATORS","Components","modify","translate","Gaps","Clones","grow","Peek","before","width","Sizes","slideWidth","Direction","is","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","sortBreakpoints","points","keys","sort","reduce","k","COMPONENTS","Html","root","track","querySelector","slides","slice","wrapper","children","filter","slide","classList","contains","_r","document","_t","t","Translate","Events","transform","mutate","transformer","style","isType","isOffset","after","movement","compose","property","duration","transition","callback","enable","offset","resolve","token","split","join","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","map","collect","Math","max","floor","unshift","clone","abs","cloneNode","append","insertBefore","appendChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","steps","countableSteps","isEnd","min","isStart","_m","substr","Swipe","swipeSin","swipeStartX","swipeStartY","bindSwipeStart","start","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","parseFloat","stopPropagation","preventDefault","end","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","changedTouches","Images","dragstart","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","_this2","Breakpoints","match","matchMedia","point","matches","_Core","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","inherits","object","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","g","eval","e","module","exports","__WEBPACK_AMD_DEFINE_RESULT__","Element","closest","ownerDocument","parentElement","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","requestAnimationFrame","cancelAnimationFrame","global","ignore","header","topOnEmptyHash","speed","clip","easing","customEasing","updateURL","popstate","emitEvents","getComputedStyle","height","a","decodeURIComponent","c","charAt","String","charCodeAt","InvalidCharacterError","toString","s","body","scrollHeight","documentElement","offsetHeight","clientHeight","m","offsetTop","h","anchor","toggle","dispatchEvent","p","w","y","E","b","S","A","cancelScroll","animateScroll","tagName","v","pageYOffset","C","O","offsetParent","innerHeight","l","I","q","F","L","focus","activeElement","outline","scrollTo","f","H","u","history","pushState","smoothScroll","JSON","stringify","id","title","d","button","metaKey","ctrlKey","toLowerCase","hostname","location","pathname","test","href","hash","state","init"],"mappings":"yFAAAA,EAAAC,EAAAC;;;;;;AAMA,IAAAC,GAUAC,KAAA,SAOAC,QAAA,EAOAC,QAAA,EAWAC,QAAA,EAOAC,IAAA,GAOAC,UAAA,EAOAC,YAAA,EAOAC,UAAA,EAOAC,eAAA,GAOAC,cAAA,IAOAC,UAAA,EAOAC,WAAA,GAOAC,WAAA,GAOAC,kBAAA,IAOAC,eAAA,IAOAC,oBAAA,2CAOAC,SAAA,GAWAC,UAAA,MAcAC,KAAA,EAWAC,eAQAC,SACAH,WACAI,IAAA,aACAC,IAAA,cAEAC,OAAA,gBACAC,SAAA,kBACAC,UAAA,mBACAC,SAAA,kBACAC,WAAA,sBACAC,UAAA,wBACAC,YAAA,uBACAC,cAAA,2BAUA,SAAAC,EAAAC,GACAC,QAAAC,MAAA,iBAAAF,GAGA,IAAAG,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAaAG,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAC,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAmBA,EAAAD,EAAAE,OAAkBD,IAAA,CACrC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIA,gBAAAR,EAAAe,EAAAC,GAGA,OAFAD,GAAAZ,EAAAH,EAAAH,UAAAkB,GACAC,GAAAb,EAAAH,EAAAgB,GACAhB,GAdA,GAwBAiB,EAAAL,OAAAM,QAAA,SAAAd,GACA,QAAAE,EAAA,EAAiBA,EAAAa,UAAAZ,OAAsBD,IAAA,CACvC,IAAAc,EAAAD,UAAAb,GAEA,QAAAQ,KAAAM,EACAR,OAAAf,UAAAwB,eAAAC,KAAAF,EAAAN,KACAV,EAAAU,GAAAM,EAAAN,IAKA,OAAAV,GAsDAmB,EAAA,SAAAC,EAAAF,GACA,IAAAE,EACA,UAAAC,eAAA,6DAGA,OAAAH,GAAA,iBAAAA,GAAA,mBAAAA,EAAAE,EAAAF,GAUA,SAAAI,EAAAC,GACA,OAAAC,SAAAD,GASA,SAAAE,EAAAF,GACA,uBAAAA,EAWA,SAAAG,EAAAH,GACA,IAAAtE,OAAA,IAAAsE,EAAA,YAAAnC,EAAAmC,GAEA,mBAAAtE,GAAA,WAAAA,KAAAsE,EAmBA,SAAAI,EAAAJ,GACA,yBAAAA,EASA,SAAAK,EAAAL,GACA,gBAAAA,EASA,SAAAM,EAAAN,GACA,OAAAA,EAAA/B,cAAAsC,MAwCA,SAAAC,EAAAxC,EAAAyC,EAAAC,GACAzB,OAAAC,eAAAlB,EAAAyC,EAAAC,GA2CA,IAAAC,EAAA,WAMA,SAAAA,IACA,IAAAC,EAAApB,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MACArB,EAAA2C,KAAAH,GAEAG,KAAAF,SACAE,KAAAC,IAAAH,EAAAlB,eA+DA,OApDAnB,EAAAoC,IACAxB,IAAA,KACAa,MAAA,SAAAgB,EAAAC,GACA,GAAAX,EAAAU,GACA,QAAArC,EAAA,EAAuBA,EAAAqC,EAAApC,OAAkBD,IACzCmC,KAAAI,GAAAF,EAAArC,GAAAsC,GAKAH,KAAAC,IAAApB,KAAAmB,KAAAF,OAAAI,KACAF,KAAAF,OAAAI,OAIA,IAAAG,EAAAL,KAAAF,OAAAI,GAAAI,KAAAH,GAAA,EAGA,OACAI,OAAA,kBACAP,KAAAF,OAAAI,GAAAG,QAaAhC,IAAA,OACAa,MAAA,SAAAgB,EAAAM,GACA,GAAAhB,EAAAU,GACA,QAAArC,EAAA,EAAuBA,EAAAqC,EAAApC,OAAkBD,IACzCmC,KAAAS,KAAAP,EAAArC,GAAA2C,GAKAR,KAAAC,IAAApB,KAAAmB,KAAAF,OAAAI,IAKAF,KAAAF,OAAAI,GAAAQ,QAAA,SAAAC,GACAA,EAAAH,aAIAX,EA1EA,GA6EAe,EAAA,WAOA,SAAAC,EAAAC,GACA,IAAAC,EAAArC,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MACArB,EAAA2C,KAAAa,GAEAb,KAAAgB,MACAhB,KAAAiB,GAAA,IAAApB,EAEAG,KAAAkB,UAAA,EACAlB,KAAAc,WACAd,KAAAmB,SAhHA,SAAAxG,EAAAwG,GACA,IAAAJ,EAAAvC,KAA2B7D,EAAAwG,GAe3B,OARAA,EAAAvC,eAAA,aACAmC,EAAA/E,QAAAwC,KAAiC7D,EAAAqB,QAAAmF,EAAAnF,SAEjCmF,EAAAnF,QAAA4C,eAAA,eACAmC,EAAA/E,QAAAH,UAAA2C,KAA6C7D,EAAAqB,QAAAH,UAAAsF,EAAAnF,QAAAH,aAI7CkF,EAgGAK,CAAAzG,EAAAoG,GACAf,KAAAK,MAAAL,KAAAmB,SAAAtG,QAqRA,OA1QA4C,EAAAoD,IACAxC,IAAA,QACAa,MAAA,WACA,IAAAmC,EAAA3C,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MAYA,OAVAsB,KAAAiB,GAAAR,KAAA,gBAEApB,EAAAgC,GACArB,KAAAgB,GAzLA,SAAAM,EAAAD,EAAAvB,GACA,IAAAyB,KAEA,QAAAC,KAAAH,EACA/B,EAAA+B,EAAAG,IACAD,EAAAC,GAAAH,EAAAG,GAAAF,EAAAC,EAAAzB,GAEAnD,EAAA,gCAIA,QAAA8E,KAAAF,EACAjC,EAAAiC,EAAAE,GAAAC,QACAH,EAAAE,GAAAC,QAIA,OAAAH,EAwKAG,CAAA1B,KAAAqB,EAAArB,KAAAiB,IAEAtE,EAAA,6CAGAqD,KAAAiB,GAAAR,KAAA,eAEAT,QAWA3B,IAAA,SACAa,MAAA,WACA,IAAAiC,EAAAzC,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MAUA,OARAsB,KAAAmB,SAAA3C,KAAiCwB,KAAAmB,YAEjCA,EAAAvC,eAAA,aACAoB,KAAAK,MAAAc,EAAAtG,SAGAmF,KAAAiB,GAAAR,KAAA,UAEAT,QAgBA3B,IAAA,KACAa,MAAA,SAAAyC,GAGA,OAFA3B,KAAAgB,GAAAY,IAAAC,KAAAF,GAEA3B,QAWA3B,IAAA,OACAa,MAAA,SAAA4C,GAIA,OAHA9B,KAAAgB,GAAAe,WAAAC,UACAhC,KAAAgB,GAAAiB,KAAAJ,KAAAC,GAEA9B,QAUA3B,IAAA,UACAa,MAAA,WAGA,OAFAc,KAAAiB,GAAAR,KAAA,WAEAT,QAWA3B,IAAA,OACAa,MAAA,WACA,IAAAgD,EAAAxD,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,IAAAA,UAAA,GAQA,OANAwD,IACAlC,KAAAmB,SAAAlG,SAAAiH,GAGAlC,KAAAiB,GAAAR,KAAA,QAEAT,QAUA3B,IAAA,QACAa,MAAA,WAGA,OAFAc,KAAAiB,GAAAR,KAAA,SAEAT,QAUA3B,IAAA,UACAa,MAAA,WAGA,OAFAc,KAAAkB,UAAA,EAEAlB,QAUA3B,IAAA,SACAa,MAAA,WAGA,OAFAc,KAAAkB,UAAA,EAEAlB,QAYA3B,IAAA,KACAa,MAAA,SAAAgB,EAAAC,GAGA,OAFAH,KAAAiB,GAAAb,GAAAF,EAAAC,GAEAH,QAWA3B,IAAA,SACAa,MAAA,SAAAsC,GACA,OAAAxB,KAAAmB,SAAAvG,OAAA4G,KAUAnD,IAAA,WACA8D,IAAA,WACA,OAAAnC,KAAAoC,IAUAC,IAAA,SAAAC,GACAjD,EAAAiD,GACAtC,KAAAoC,GAAAE,EAEA3F,EAAA,4CAWA0B,IAAA,QACA8D,IAAA,WACA,OAAAnC,KAAAuC,IASAF,IAAA,SAAAxE,GACAmC,KAAAuC,GAAAtD,EAAApB,MAUAQ,IAAA,OACA8D,IAAA,WACA,OAAAnC,KAAAmB,SAAAvG,QAUAyD,IAAA,WACA8D,IAAA,WACA,OAAAnC,KAAAwC,IASAH,IAAA,SAAAI,GACAzC,KAAAwC,KAAAC,MAGA5B,EAtSA,GAmeA,SAAA6B,IACA,WAAAC,MAAAC,UAcA,SAAAhH,EAAAiH,EAAAC,EAAA/B,GACA,IAAAgC,OAAA,EACAvC,OAAA,EACAwC,OAAA,EACAC,OAAA,EACAC,EAAA,EACAnC,UAEA,IAAAoC,EAAA,WACAD,GAAA,IAAAnC,EAAAqC,QAAA,EAAAV,IACAK,EAAA,KACAE,EAAAJ,EAAAQ,MAAA7C,EAAAwC,GACAD,IAAAvC,EAAAwC,EAAA,OAGAM,EAAA,WACA,IAAAC,EAAAb,IACAQ,IAAA,IAAAnC,EAAAqC,UAAAF,EAAAK,GACA,IAAAC,EAAAV,GAAAS,EAAAL,GAcA,OAbA1C,EAAAR,KACAgD,EAAAtE,UACA8E,GAAA,GAAAA,EAAAV,GACAC,IACAU,aAAAV,GACAA,EAAA,MAEAG,EAAAK,EACAN,EAAAJ,EAAAQ,MAAA7C,EAAAwC,GACAD,IAAAvC,EAAAwC,EAAA,OACKD,IAAA,IAAAhC,EAAA2C,WACLX,EAAAY,WAAAR,EAAAK,IAEAP,GASA,OANAK,EAAAM,OAAA,WACAH,aAAAV,GACAG,EAAA,EACAH,EAAAvC,EAAAwC,EAAA,MAGAM,EAGA,IAAAO,GACA5H,KAAA,4BACAC,KAAA,6BA4IA,SAAA4H,EAAAC,GAIA,IAHA,IAAAC,EAAAD,EAAAE,WAAAC,WACAC,KAEQH,EAAGA,IAAAI,YACX,IAAAJ,EAAAK,UAAAL,IAAAD,GACAI,EAAA7D,KAAA0D,GAIA,OAAAG,EASA,SAAAG,EAAAP,GACA,SAAAA,gBAAAQ,OAAAC,aAOA,IA0lBAC,EAAA,WAIA,SAAAA,IACA,IAAAC,EAAAhG,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MACArB,EAAA2C,KAAAyE,GAEAzE,KAAA0E,YA2DA,OA9CAjH,EAAAgH,IACApG,IAAA,KACAa,MAAA,SAAAY,EAAA6E,EAAAC,GACAxF,EAAAU,KACAA,OAGA,QAAAjC,EAAA,EAAqBA,EAAAiC,EAAAhC,OAAmBD,IACxCmC,KAAA0E,UAAA5E,EAAAjC,IAAA+G,EAEAD,EAAAE,iBAAA/E,EAAAjC,GAAAmC,KAAA0E,UAAA5E,EAAAjC,KAAA,MAaAQ,IAAA,MACAa,MAAA,SAAAY,EAAA6E,GACAvF,EAAAU,KACAA,OAGA,QAAAjC,EAAA,EAAqBA,EAAAiC,EAAAhC,OAAmBD,IACxC8G,EAAAG,oBAAAhF,EAAAjC,GAAAmC,KAAA0E,UAAA5E,EAAAjC,KAAA,MAWAQ,IAAA,UACAa,MAAA,kBACAc,KAAA0E,cAGAD,EAnEA,GA0HAM,GAAA,aACAC,GACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KA2PAC,GArGA,SAAAvE,EAAAwE,GACA,OAOAC,OAAA,SAAAC,GACA,OAAAA,EAAAF,EAAAG,KAAAtG,MAAA2B,EAAAR,SAYA,SAAAQ,EAAAwE,GACA,OAOAC,OAAA,SAAAC,GACA,OAAAA,EAAAF,EAAAI,OAAAC,KAAA,KAYA,SAAA7E,EAAAwE,GACA,OAOAC,OAAA,SAAAC,GACA,GAAA1E,EAAAM,SAAApG,SAAA,GACA,IAAAe,EAAAuJ,EAAAM,KAAAzG,MAEA,OAAAG,EAAAvD,GACAyJ,EAAAzJ,EAAA8J,OAGAL,EAAAzJ,EAGA,OAAAyJ,KAYA,SAAA1E,EAAAwE,GACA,OAOAC,OAAA,SAAAC,GACA,IAAAvK,EAAAqK,EAAAG,KAAAtG,MACA2G,EAAAR,EAAAS,MAAAD,MACA9K,EAAA8F,EAAAM,SAAApG,QACAgL,EAAAV,EAAAS,MAAAC,WAEA,iBAAAhL,EACAwK,GAAAM,EAAA,EAAAE,EAAA,GAGAR,EAAAQ,EAAAhL,EAAAC,EAAAD,KApHA,SAAA8F,EAAAwE,GACA,OAOAC,OAAA,SAAAC,GACA,OAAAF,EAAAW,UAAAC,GAAA,QACAV,EAGAA,MAmWAW,GAAA,0BACAC,GAAA,yBACAC,GAAA,iDACAC,GAAA,gDA87BA,SAAAC,EAAAC,GACA,OAAAlH,EAAAkH,IA77FArJ,EA87FAqJ,EA77FApI,OAAAqI,KAAAtJ,GAAAuJ,OAAAC,OAAA,SAAAjM,EAAAkM,GAGA,OAFAlM,EAAAkM,GAAAzJ,EAAAyJ,GAEAlM,EAAAkM,GAAAlM,SA47FAkC,EAAA,4CAh8FA,IAAAO,EAs8FA,IA8FA0J,GAEAC,KA9uEA,SAAAhG,EAAAwE,GACA,IAAAwB,GAMAnF,MAAA,WACA1B,KAAA8G,KAAAjG,EAAAC,SACAd,KAAA+G,MAAA/G,KAAA8G,KAAAE,cAXA,2BAYAhH,KAAAiH,OAAAxH,MAAArC,UAAA8J,MAAArI,KAAAmB,KAAAmH,QAAAC,UAAAC,OAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAC,SAAA3G,EAAAM,SAAAnF,QAAAO,gBAsEA,OAjEAmD,EAAAmH,EAAA,QAMA1E,IAAA,WACA,OAAA0E,EAAAY,IASApF,IAAA,SAAA5H,GACA2E,EAAA3E,KACAA,EAAAiN,SAAAV,cAAAvM,IAGA6J,EAAA7J,GACAoM,EAAAY,GAAAhN,EAEAkC,EAAA,gDAKA+C,EAAAmH,EAAA,SAMA1E,IAAA,WACA,OAAA0E,EAAAc,IASAtF,IAAA,SAAAuF,GACAtD,EAAAsD,GACAf,EAAAc,GAAAC,EAEAjL,EAAA,kFAKA+C,EAAAmH,EAAA,WAMA1E,IAAA,WACA,OAAA0E,EAAAE,MAAAK,SAAA,MAIAP,GA8pEAgB,UA/vCA,SAAAhH,EAAAwE,EAAAyC,GACA,IAAAD,GAOAxF,IAAA,SAAAnD,GACA,IAAA6I,EA3BA,SAAAlH,EAAAwE,GACA,OAOA2C,OAAA,SAAAzC,GACA,QAAA1H,EAAA,EAAqBA,EAAAuH,EAAAtH,OAAqBD,IAC1C0H,EAAAH,EAAAvH,GAAAgD,EAAAwE,GAAAC,OAAAC,GAGA,OAAAA,IAcA0C,CAAApH,EAAAwE,GAAA2C,OAAA9I,GAEAmG,EAAAwB,KAAAM,QAAAe,MAAAH,UAAA,kBAAAA,EAAA,iBASAxH,OAAA,WACA8E,EAAAwB,KAAAM,QAAAe,MAAAH,UAAA,KA6CA,OApCAD,EAAA1H,GAAA,gBAAAI,GACA,IAAAxF,EAAAqK,EAAAG,KAAAtG,MACApB,EAAAuH,EAAAS,MAAAhI,OACA+H,EAAAR,EAAAS,MAAAC,WAEA,OAAAlF,EAAAsH,OAAA,aAAA9C,EAAAzD,IAAAwG,SAAA,MACA/C,EAAAtD,WAAAsG,MAAA,WACAP,EAAArH,KAAA,kBAEAoH,EAAAxF,IAAAwD,GAAA/H,EAAA,MAGA+J,EAAAxF,KAAAwD,EAAA7K,EAAA8C,IAGA+C,EAAAsH,OAAA,aAAA9C,EAAAzD,IAAAwG,SAAA,MACA/C,EAAAtD,WAAAsG,MAAA,WACAP,EAAArH,KAAA,kBAEAoH,EAAAxF,IAAA,KAGAwF,EAAAxF,IAAAwD,EAAA/H,EAAA9C,EAAA8C,IAGA+J,EAAAxF,IAAA7B,EAAA8H,YAOAR,EAAA1H,GAAA,qBACAyH,EAAAtH,WAGAsH,GA8rCA9F,WA3rCA,SAAAlB,EAAAwE,EAAAyC,GAOA,IAAA5G,GAAA,EAEAa,GAOAwG,QAAA,SAAAC,GACA,IAAArH,EAAAN,EAAAM,SAEA,OAAAD,EAIAsH,EAAA,QAAArH,EAAAxF,oBAHA6M,EAAA,IAAAxI,KAAAyI,SAAA,MAAAtH,EAAAxF,qBAaA0G,IAAA,WACA,IAAAmG,EAAA9J,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,eAEA2G,EAAAwB,KAAAM,QAAAe,MAAAQ,WAAA1I,KAAAuI,QAAAC,IASAjI,OAAA,WACA8E,EAAAwB,KAAAM,QAAAe,MAAAQ,WAAA,IAUAL,MAAA,SAAAM,GACAhF,WAAA,WACAgF,KACO3I,KAAAyI,WASPG,OAAA,WACA1H,GAAA,EAEAlB,KAAAqC,OASAL,QAAA,WACAd,GAAA,EAEAlB,KAAAqC,QAwDA,OApDA3C,EAAAqC,EAAA,YAOAI,IAAA,WACA,IAAAhB,EAAAN,EAAAM,SAEA,OAAAN,EAAAsH,OAAA,WAAA9C,EAAAzD,IAAAiH,OACA1H,EAAAzF,eAGAyF,EAAA1F,qBAQAqM,EAAA1H,GAAA,kBACA2B,EAAAM,QASAyF,EAAA1H,IAAA,qDACA2B,EAAAC,YAOA8F,EAAA1H,GAAA,iBACA2B,EAAA6G,WAOAd,EAAA1H,GAAA,qBACA2B,EAAAxB,WAGAwB,GAijCAiE,UAxhDA,SAAAnF,EAAAwE,EAAAyC,GACA,IAAA9B,GAMAtE,MAAA,WACA1B,KAAAd,MAAA2B,EAAAM,SAAAtF,WAUAiN,QAAA,SAAAnH,GACA,IAAAoH,EAAApH,EAAAuF,MAAA,KAEA,OAAAlH,KAAAiG,GAAA,OACAtE,EAAAqH,MAAAD,GAAAE,KAAAjE,EAAA+D,IAGApH,GAUAsE,GAAA,SAAApK,GACA,OAAAmE,KAAAd,QAAArD,GASAqN,SAAA,WACA7D,EAAAwB,KAAAC,KAAAS,UAAA4B,IAAAtI,EAAAM,SAAAnF,QAAAH,UAAAmE,KAAAd,SASAkK,YAAA,WACA/D,EAAAwB,KAAAC,KAAAS,UAAAhH,OAAAM,EAAAM,SAAAnF,QAAAH,UAAAmE,KAAAd,UAwDA,OApDAQ,EAAAsG,EAAA,SAMA7D,IAAA,WACA,OAAA6D,EAAAqD,IAUAhH,IAAA,SAAAnD,GACA6F,EAAAuE,QAAApK,IAAA,EACA8G,EAAAqD,GAAAnK,EAEAvC,EAAA,6CAUAmL,EAAA1H,IAAA,+BACA4F,EAAAoD,gBAOAtB,EAAA1H,GAAA,oBACA4F,EAAAtE,UAQAoG,EAAA1H,IAAA,oCACA4F,EAAAkD,aAGAlD,GAy6CAL,KA9pEA,SAAA9E,EAAAwE,EAAAyC,GACA,IAAAnC,GAMAjE,MAAA,WACA1B,KAAAd,MAAA2B,EAAAM,SAAArF,OA2DA,OAvDA4D,EAAAiG,EAAA,SAMAxD,IAAA,WACA,OAAAwD,EAAA0D,IAUAhH,IAAA,SAAAnD,GACAG,EAAAH,IACAA,EAAA0G,OAAA3G,EAAAC,EAAA0G,QACA1G,EAAAmJ,MAAApJ,EAAAC,EAAAmJ,QAEAnJ,EAAAD,EAAAC,GAGAyG,EAAA0D,GAAAnK,KAIAQ,EAAAiG,EAAA,YAMAxD,IAAA,WACA,IAAAjD,EAAAyG,EAAAzG,MACApE,EAAA+F,EAAAM,SAAArG,QAEA,OAAAuE,EAAAH,GACAA,EAAA0G,OAAA9K,EAAAoE,EAAAmJ,MAAAvN,EAGA,EAAAoE,EAAApE,KAQAgN,EAAA1H,IAAA,8BACAuF,EAAAjE,UAGAiE,GA4lEAG,MAt/DA,SAAAjF,EAAAwE,EAAAyC,GACA,IAAAhC,GAMAyD,YAAA,WAGA,IAFA,IAAAtC,EAAA5B,EAAAwB,KAAAI,OAEApJ,EAAA,EAAqBA,EAAAoJ,EAAAnJ,OAAmBD,IACxCoJ,EAAApJ,GAAAqK,MAAArC,MAAA7F,KAAA+F,WAAA,MAUAyD,aAAA,SAAAC,GACApE,EAAAwB,KAAAM,QAAAe,MAAArC,MAAA7F,KAAA0J,YAAA,MASAnJ,OAAA,WAGA,IAFA,IAAA0G,EAAA5B,EAAAwB,KAAAI,OAEApJ,EAAA,EAAqBA,EAAAoJ,EAAAnJ,OAAmBD,IACxCoJ,EAAApJ,GAAAqK,MAAArC,MAAA,GAGAR,EAAAwB,KAAAM,QAAAe,MAAArC,MAAA,KAmEA,OA/DAnG,EAAAoG,EAAA,UAMA3D,IAAA,WACA,OAAAkD,EAAAwB,KAAAI,OAAAnJ,UAIA4B,EAAAoG,EAAA,SAMA3D,IAAA,WACA,OAAAkD,EAAAwB,KAAAC,KAAA6C,eAIAjK,EAAAoG,EAAA,eAMA3D,IAAA,WACA,OAAA2D,EAAAC,WAAAD,EAAAhI,OAAAuH,EAAAG,KAAAE,KAAAL,EAAAI,OAAAC,QAIAhG,EAAAoG,EAAA,cAMA3D,IAAA,WACA,OAAA2D,EAAAD,MAAAhF,EAAAM,SAAArG,QAAAuK,EAAAM,KAAAiE,SAAAvE,EAAAG,KAAAoE,YAUA9B,EAAA1H,IAAA,6CACA0F,EAAAyD,cACAzD,EAAA0D,iBAOA1B,EAAA1H,GAAA,qBACA0F,EAAAvF,WAGAuF,GA84DAN,KA15EA,SAAA3E,EAAAwE,EAAAyC,GACA,IAAAtC,GAMA9D,MAAA,WACA1B,KAAAd,MAAA2B,EAAAM,SAAAnG,KAWAqI,MAAA,SAAA4D,GACA,QAAApJ,EAAA,EAAAgM,EAAA5C,EAAAnJ,OAA0CD,EAAAgM,EAAShM,IAAA,CACnD,IAAAqK,EAAAjB,EAAApJ,GAAAqK,MACArM,EAAAwJ,EAAAW,UAAA9G,MAGAgJ,EAAArE,EAAAhI,GAAA,IADA,IAAAgC,EACAmC,KAAAd,MAAA,OAEA,GAGArB,IAAAoJ,EAAAnJ,OAAA,EACAoK,EAAArE,EAAAhI,GAAA,IAAAmE,KAAAd,MAAA,OAEAgJ,EAAArE,EAAAhI,GAAA,SAYA0E,OAAA,SAAA0G,GACA,QAAApJ,EAAA,EAAAgM,EAAA5C,EAAAnJ,OAA0CD,EAAAgM,EAAShM,IAAA,CACnD,IAAAqK,EAAAjB,EAAApJ,GAAAqK,MAEAA,EAAA4B,WAAA,GACA5B,EAAA6B,YAAA,MA8EA,OAzEArK,EAAA8F,EAAA,SAMArD,IAAA,WACA,OAAAqD,EAAA6D,IAUAhH,IAAA,SAAAnD,GACAsG,EAAA6D,GAAApK,EAAAC,MAIAQ,EAAA8F,EAAA,QAOArD,IAAA,WACA,OAAAqD,EAAAtG,OAAAmG,EAAAS,MAAAhI,OAAA,MAIA4B,EAAA8F,EAAA,YAOArD,IAAA,WACA,IAAArH,EAAA+F,EAAAM,SAAArG,QAEA,OAAA0K,EAAAtG,OAAApE,EAAA,GAAAA,KAQAgN,EAAA1H,GAAA,oBACAoF,EAAA9D,UAQAoG,EAAA1H,IAAA,wBAAAxE,EAAA,WACA4J,EAAAnC,MAAAgC,EAAAwB,KAAAM,QAAAC,WACG,KAMHU,EAAA1H,GAAA,qBACAoF,EAAAjF,OAAA8E,EAAAwB,KAAAM,QAAAC,YAGA5B,GA2xEAvD,KA3lEA,SAAApB,EAAAwE,EAAAyC,GACA,IAAA7F,GAMAP,MAAA,WACA1B,KAAAoC,GAAA,GAUAP,KAAA,WACA,IAAAmI,EAAAhK,KAEA6I,EAAAnK,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,KAEAsB,KAAA6I,SAEAf,EAAArH,KAAA,QACA6H,SAAAtI,KAAAd,QAGAmG,EAAAtD,WAAAsG,MAAA,WACAP,EAAArH,KAAA,cACA6H,SAAA0B,EAAA9K,YAiEA,OA3DAQ,EAAAuC,EAAA,UAMAE,IAAA,WACA,OAAAF,EAAAG,IASAC,IAAA,SAAAnD,GACA+C,EAAAG,GAAA7C,EAAAL,GAAA,EAAAD,EAAAC,MAIAQ,EAAAuC,EAAA,aAMAE,IAAA,WACA,OAAAkD,EAAAS,MAAAC,WAAAlF,EAAAR,SAIAX,EAAAuC,EAAA,SAMAE,IAAA,WACA,IAAA0G,EAAA7I,KAAA6I,OACAtD,EAAAvF,KAAAuF,UAEA,OAAAF,EAAAW,UAAAC,GAAA,OACAV,EAAAsD,EAGAtD,EAAAsD,KASAf,EAAA1H,IAAA,iCACA6B,EAAAJ,SAGAI,GA4/DAwD,OAnzDA,SAAA5E,EAAAwE,EAAAyC,GACA,IAAArC,GAIA/D,MAAA,WACA1B,KAAAiK,SAEApJ,EAAAsH,OAAA,cACAnI,KAAA2B,QAAA3B,KAAAkK,MACAlK,KAAAiK,MAAAjK,KAAAmK,YAUAD,IAAA,WAQA,IAPA,IAAAvI,EAAAjD,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MAEA5D,EAAA+F,EAAAM,SAAArG,QACAgD,EAAAuH,EAAAwB,KAAAI,OAAAnJ,OAIArD,EAAA,EAAqBA,EAAA2P,KAAAC,IAAA,EAAAD,KAAAE,MAAAxP,EAAAgD,IAA+CrD,IAAA,CAEpE,QAAAoD,EAAA,EAAuBA,GAAAC,EAAA,EAAiBD,IACxC8D,EAAArB,KAAA,GAAAzC,GAIA,QAAA0E,EAAAzE,EAAA,EAAiCyE,GAAA,EAASA,IAC1CZ,EAAA4I,QAAA,IAAAhI,GAIA,OAAAZ,GASAwI,QAAA,WAKA,IAJA,IAAAF,EAAAvL,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MACAiD,EAAA3B,KAAA2B,QAGA9D,EAAA,EAAqBA,EAAA8D,EAAA7D,OAAoBD,IAAA,CACzC,IAAA2M,EAAAnF,EAAAwB,KAAAI,OAAAmD,KAAAK,IAAA9I,EAAA9D,KAAA6M,WAAA,GAEAF,EAAAjD,UAAA4B,IAAAtI,EAAAM,SAAAnF,QAAAO,YAEA0N,EAAA3J,KAAAkK,GAGA,OAAAP,GASAU,OAAA,WAKA,IAJA,IAAAV,EAAAjK,KAAAiK,MACAtI,EAAA3B,KAAA2B,QAGA9D,EAAA,EAAqBA,EAAAoM,EAAAnM,OAAkBD,IAAA,CACvC,IAAA8C,EAAAsJ,EAAApM,GAEA8C,EAAAuH,MAAArC,MAAAR,EAAAS,MAAAC,WAAA,KAIA,MAAApE,EAAA9D,GAAA,GACAwH,EAAAwB,KAAAM,QAAAyD,aAAAjK,EAAA0E,EAAAwB,KAAAI,OAAA,IAEA5B,EAAAwB,KAAAM,QAAA0D,YAAAlK,KAWAJ,OAAA,WAIA,IAHA,IAAA0J,EAAAjK,KAAAiK,MAGApM,EAAA,EAAqBA,EAAAoM,EAAAnM,OAAkBD,IACvCoM,EAAApM,GAAA0C,WA4CA,OAvCAb,EAAA+F,EAAA,QAMAtD,IAAA,WACA,OAAAkD,EAAAS,MAAAC,WAAAV,EAAAG,KAAAtG,OAAAuG,EAAAwE,MAAAnM,UAQAgK,EAAA1H,GAAA,oBACAqF,EAAAlF,SACAkF,EAAA/D,QACA+D,EAAAkF,WAOA7C,EAAA1H,GAAA,0BACAS,EAAAsH,OAAA,aACA1C,EAAAkF,WAQA7C,EAAA1H,GAAA,qBACAqF,EAAAlF,WAGAkF,GAkqDAqF,OAzlDA,SAAAjK,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEAqG,GAIApJ,MAAA,WACA1B,KAAAgL,QAUAA,KAAA,WACAD,EAAA3K,GAAA,SAAAmE,OAAA3I,EAAA,WACAkM,EAAArH,KAAA,WACOI,EAAAM,SAAAvF,YASPqP,OAAA,WACAF,EAAAG,IAAA,SAAA3G,UAaA,OALAuD,EAAA1H,GAAA,qBACA0K,EAAAG,SACAF,EAAAI,YAGAL,GAyiDAM,MA/4DA,SAAAvK,EAAAwE,EAAAyC,GACA,IAAAsD,GAOA1J,MAAA,WACAoG,EAAArH,KAAA,gBAEAT,KAAAqL,YACArL,KAAAsL,cAEAxD,EAAArH,KAAA,gBASA4K,UAAA,WACAhG,EAAAwB,KAAAC,KAAAS,UAAA4B,IAAAtI,EAAAM,SAAAnF,QAAA6E,EAAAM,SAAAvG,QASA0Q,YAAA,WACA,IAAAtP,EAAA6E,EAAAM,SAAAnF,QACAsL,EAAAjC,EAAAwB,KAAAI,OAAApG,EAAAR,OAEAiH,EAAAC,UAAA4B,IAAAnN,EAAAS,aAEAqH,EAAAwD,GAAA5G,QAAA,SAAA6K,GACAA,EAAAhE,UAAAhH,OAAAvE,EAAAS,gBAUA+O,cAAA,WACA,IAAAxP,EAAA6E,EAAAM,SAAAnF,QAEAqJ,EAAAwB,KAAAC,KAAAS,UAAAhH,OAAAvE,EAAA6E,EAAAM,SAAAvG,OAEAyK,EAAAwB,KAAAI,OAAAvG,QAAA,SAAA6K,GACAA,EAAAhE,UAAAhH,OAAAvE,EAAAS,iBA+BA,OArBAqL,EAAA1H,IAAA,+BACAgL,EAAAI,kBAQA1D,EAAA1H,IAAA,8BACAgL,EAAA1J,UAOAoG,EAAA1H,GAAA,wBACAgL,EAAAE,gBAGAF,GAyzDAxJ,IAzpFA,SAAAf,EAAAwE,EAAAyC,GACA,IAAAlG,GAMAF,MAAA,WACA1B,KAAAoC,IAAA,GASAP,KAAA,SAAA4J,GACA,IAAAzB,EAAAhK,KAEAa,EAAAK,WACAL,EAAAmB,UAEAhC,KAAAyL,OAEA3D,EAAArH,KAAA,aAAAT,KAAAyL,MAEAzL,KAAA0L,YAEA5D,EAAArH,KAAA,MAAAT,KAAAyL,MAEApG,EAAAtD,WAAAsG,MAAA,YACA2B,EAAA5B,SAAA,MAAA4B,EAAA5B,SAAA,QACA4B,EAAA5H,IAAA,EAEA0F,EAAArH,KAAA,aAAAuJ,EAAAyB,OAGA3D,EAAArH,KAAA,YAAAuJ,EAAAyB,MAEA5K,EAAA+H,aAWA8C,UAAA,WACA,IAAAD,EAAAzL,KAAAyL,KACA3N,EAAAkC,KAAAlC,OACA6N,EAAAF,EAAAE,MACA9P,EAAA4P,EAAA5P,UAGA+P,EAliBA,iBAkiBA3M,EAAA0M,IAAA,IAAA1M,EAAA0M,GAEA,OAAA9P,GACA,QACA,MAAA8P,EACA9K,EAAAR,MAAAvC,EACWkC,KAAA6L,SACX7L,KAAAoC,IAAA,EAEAvB,EAAAR,MAAA,EAEAyH,EAAArH,KAAA,UAAAgL,IACWG,EACX/K,EAAAR,OAAA+J,KAAA0B,IAAAhO,EAAA+C,EAAAR,OAAApB,EAAA0M,IAEA9K,EAAAR,QAEA,MAEA,QACA,MAAAsL,EACA9K,EAAAR,MAAA,EACWL,KAAA+L,WACX/L,KAAAoC,IAAA,EAEAvB,EAAAR,MAAAvC,EAEAgK,EAAArH,KAAA,YAAAgL,IACWG,EACX/K,EAAAR,OAAA+J,KAAA0B,IAAAjL,EAAAR,MAAApB,EAAA0M,IAEA9K,EAAAR,QAEA,MAEA,QACAQ,EAAAR,MAAAsL,IAWAI,QAAA,WACA,WAAAlL,EAAAR,OASAwL,MAAA,WACA,OAAAhL,EAAAR,QAAAL,KAAAlC,QAUAsK,SAAA,SAAAvM,GACA,OAAAmE,KAAAoC,IAAApC,KAAAyL,KAAA5P,gBAmDA,OA/CA6D,EAAAkC,EAAA,QAMAO,IAAA,WACA,OAAAnC,KAAAgM,IASA3J,IAAA,SAAAnD,GACAc,KAAAgM,IACAnQ,UAAAqD,EAAA+M,OAAA,KACAN,MAAAzM,EAAA+M,OAAA,GAAA/M,EAAA+M,OAAA,SAKAvM,EAAAkC,EAAA,UAOAO,IAAA,WACA,OAAAkD,EAAAwB,KAAAI,OAAAnJ,OAAA,KAIA4B,EAAAkC,EAAA,UAMAO,IAAA,WACA,OAAAnC,KAAAoC,MAIAR,GA0+EAsK,MApjCA,SAAArL,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEA0H,EAAA,EACAC,EAAA,EACAC,EAAA,EACAnL,GAAA,EAEAgL,GAMAxK,MAAA,WACA1B,KAAAsM,kBAUAC,MAAA,SAAArM,GACA,IAAAgB,IAAAL,EAAAK,SAAA,CACAlB,KAAAgC,UAEA,IAAAwK,EAAAxM,KAAAyM,QAAAvM,GAEAiM,EAAA,KACAC,EAAAnN,EAAAuN,EAAAE,OACAL,EAAApN,EAAAuN,EAAAG,OAEA3M,KAAA4M,gBACA5M,KAAA6M,eAEA/E,EAAArH,KAAA,iBAUAgL,KAAA,SAAAvL,GACA,IAAAW,EAAAK,SAAA,CACA,IAAAC,EAAAN,EAAAM,SAEAqL,EAAAxM,KAAAyM,QAAAvM,GAEA4M,EAAA7N,EAAAuN,EAAAE,OAAAN,EACAW,EAAA9N,EAAAuN,EAAAG,OAAAN,EACAW,EAAA5C,KAAAK,IAAAqC,GAAA,GACAG,EAAA7C,KAAAK,IAAAsC,GAAA,GACAG,EAAA9C,KAAA+C,KAAAH,EAAAC,GACAG,EAAAhD,KAAA+C,KAAAF,GAQA,GAJA,KAFAd,EAAA/B,KAAAiD,KAAAD,EAAAF,IAEA9C,KAAAkD,GAAAnM,EAAA3F,YACA6J,EAAApD,KAAAJ,KAAAiL,EAAAS,WAAApM,EAAA5F,eAGA,IAAA4Q,EAAA/B,KAAAkD,GAAAnM,EAAA3F,YAQA,SAPA0E,EAAAsN,kBACAtN,EAAAuN,iBAEApI,EAAAwB,KAAAC,KAAAS,UAAA4B,IAAAhI,EAAAnF,QAAAM,UAEAwL,EAAArH,KAAA,gBAcAiN,IAAA,SAAAxN,GACA,IAAAW,EAAAK,SAAA,CACA,IAAAC,EAAAN,EAAAM,SAEAqL,EAAAxM,KAAAyM,QAAAvM,GACAyN,EAAA3N,KAAA2N,UAAAzN,GAEA0N,EAAApB,EAAAE,MAAAN,EACAyB,EAAA,IAAA1B,EAAA/B,KAAAkD,GACA3B,EAAAvB,KAAA0D,MAAAF,EAAAvI,EAAAS,MAAAC,YAEA/F,KAAA4I,SAEAgF,EAAAD,GAAAE,EAAA1M,EAAA3F,YAEA2F,EAAA7F,WACAqQ,EAAAvB,KAAA0B,IAAAH,EAAA1M,EAAAkC,EAAA7F,YAGA+J,EAAAW,UAAAC,GAAA,SACA0F,MAGAtG,EAAAzD,IAAAC,KAAAwD,EAAAW,UAAA8C,QAAA,IAAA6C,KACSiC,GAAAD,GAAAE,EAAA1M,EAAA3F,YAET2F,EAAA7F,WACAqQ,EAAAvB,KAAAC,IAAAsB,GAAA1M,EAAAkC,EAAA7F,YAGA+J,EAAAW,UAAAC,GAAA,SACA0F,MAGAtG,EAAAzD,IAAAC,KAAAwD,EAAAW,UAAA8C,QAAA,IAAA6C,KAGAtG,EAAApD,KAAAJ,OAGAwD,EAAAwB,KAAAC,KAAAS,UAAAhH,OAAAY,EAAAnF,QAAAM,UAEA0D,KAAA+N,kBACA/N,KAAAgO,iBAEAlG,EAAArH,KAAA,eAUA6L,eAAA,WACA,IAAAnL,EAAAN,EAAAM,SAEAA,EAAA/F,gBACA2P,EAAA3K,GAAA8F,EAAA,GAAAb,EAAAwB,KAAAM,QAAAnH,KAAAuM,MAAAvB,KAAAhL,OAGAmB,EAAA9F,eACA0P,EAAA3K,GAAA8F,EAAA,GAAAb,EAAAwB,KAAAM,QAAAnH,KAAAuM,MAAAvB,KAAAhL,QAUAiO,iBAAA,WACAlD,EAAAG,IAAAhF,EAAA,GAAAb,EAAAwB,KAAAM,SACA4D,EAAAG,IAAAhF,EAAA,GAAAb,EAAAwB,KAAAM,UASAyF,cAAA,WACA7B,EAAA3K,GAAA+F,EAAAd,EAAAwB,KAAAM,QAAAvL,EAAAoE,KAAAyL,KAAAT,KAAAhL,MAAAa,EAAAM,SAAAvF,YASAmS,gBAAA,WACAhD,EAAAG,IAAA/E,EAAAd,EAAAwB,KAAAM,UASA0F,aAAA,WACA9B,EAAA3K,GAAAgG,EAAAf,EAAAwB,KAAAM,QAAAnH,KAAA0N,IAAA1C,KAAAhL,QASAgO,eAAA,WACAjD,EAAAG,IAAA9E,EAAAf,EAAAwB,KAAAM,UASAsF,QAAA,SAAAvM,GACA,OAAAmG,EAAAiD,QAAApJ,EAAAtF,OAAA,EACAsF,EAGAA,EAAAuM,QAAA,IAAAvM,EAAAgO,eAAA,IASAP,UAAA,SAAAzN,GACA,IAAAiB,EAAAN,EAAAM,SAEA,OAAAkF,EAAAiD,QAAApJ,EAAAtF,OAAA,EACAuG,EAAA9F,cAGA8F,EAAA/F,gBASAwN,OAAA,WAKA,OAJA1H,GAAA,EAEAmE,EAAAtD,WAAA6G,SAEA5I,MASAgC,QAAA,WAKA,OAJAd,GAAA,EAEAmE,EAAAtD,WAAAC,UAEAhC,OAuBA,OAfA8H,EAAA1H,GAAA,yBACAiF,EAAAwB,KAAAC,KAAAS,UAAA4B,IAAAtI,EAAAM,SAAAnF,QAAAK,aAOAyL,EAAA1H,GAAA,qBACA8L,EAAA+B,mBACA/B,EAAA6B,kBACA7B,EAAA8B,iBACAjD,EAAAI,YAGAe,GAqxBAiC,OAlxBA,SAAAtN,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEA0J,GAMAzM,MAAA,WACA1B,KAAAgL,QASAA,KAAA,WACAD,EAAA3K,GAAA,YAAAiF,EAAAwB,KAAAM,QAAAnH,KAAAoO,YASAnD,OAAA,WACAF,EAAAG,IAAA,YAAA7F,EAAAwB,KAAAM,UASAiH,UAAA,SAAAlO,GACAA,EAAAuN,mBAaA,OALA3F,EAAA1H,GAAA,qBACA+N,EAAAlD,SACAF,EAAAI,YAGAgD,GAytBAE,QAttBA,SAAAxN,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EASA6J,GAAA,EASAC,GAAA,EAEAF,GAMA3M,MAAA,WAOA1B,KAAAwO,GAAAnJ,EAAAwB,KAAAM,QAAAsH,iBAAA,KAEAzO,KAAAgL,QASAA,KAAA,WACAD,EAAA3K,GAAA,QAAAiF,EAAAwB,KAAAM,QAAAnH,KAAA0O,QASAzD,OAAA,WACAF,EAAAG,IAAA,QAAA7F,EAAAwB,KAAAM,UAUAuH,MAAA,SAAAxO,GACAA,EAAAsN,kBAEAe,GACArO,EAAAuN,kBAUAkB,OAAA,WAGA,GAFAJ,GAAA,GAEAD,EAAA,CACA,QAAAzQ,EAAA,EAAuBA,EAAAmC,KAAAiK,MAAAnM,OAAuBD,IAC9CmC,KAAAiK,MAAApM,GAAA+Q,WAAA,EAEA5O,KAAAiK,MAAApM,GAAAgR,aAAA,YAAA7O,KAAAiK,MAAApM,GAAAiR,aAAA,SAEA9O,KAAAiK,MAAApM,GAAAkR,gBAAA,QAGAT,GAAA,EAGA,OAAAtO,MASAgP,OAAA,WAGA,GAFAT,GAAA,EAEAD,EAAA,CACA,QAAAzQ,EAAA,EAAuBA,EAAAmC,KAAAiK,MAAAnM,OAAuBD,IAC9CmC,KAAAiK,MAAApM,GAAA+Q,WAAA,EAEA5O,KAAAiK,MAAApM,GAAAgR,aAAA,OAAA7O,KAAAiK,MAAApM,GAAAiR,aAAA,cAEA9O,KAAAiK,MAAApM,GAAAgR,aAAA,iBAAA9O,GAGAuO,GAAA,EAGA,OAAAtO,OA2CA,OAvCAN,EAAA2O,EAAA,SAMAlM,IAAA,WACA,OAAAkM,EAAAG,MAQA1G,EAAA1H,GAAA,wBACAiO,EAAAM,WAOA7G,EAAA1H,GAAA,uBACAiF,EAAAtD,WAAAsG,MAAA,WACAgG,EAAAW,aAQAlH,EAAA1H,GAAA,qBACAiO,EAAAW,SACAX,EAAApD,SACAF,EAAAI,YAGAkD,GAgjBAY,SA1iBA,SAAApO,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEAwK,GAOAvN,MAAA,WAOA1B,KAAAkP,GAAA7J,EAAAwB,KAAAC,KAAA2H,iBAzBA,mCAiCAzO,KAAAuC,GAAA8C,EAAAwB,KAAAC,KAAA2H,iBAhCA,+BAkCAzO,KAAAmP,eASAC,UAAA,WACA,QAAAvR,EAAA,EAAqBA,EAAAmC,KAAAkP,GAAApR,OAAoBD,IACzCmC,KAAAkJ,SAAAlJ,KAAAkP,GAAArR,GAAAuJ,WAUAiI,aAAA,WACA,QAAAxR,EAAA,EAAqBA,EAAAmC,KAAAkP,GAAApR,OAAoBD,IACzCmC,KAAAoJ,YAAApJ,KAAAkP,GAAArR,GAAAuJ,WAWA8B,SAAA,SAAAoG,GACA,IAAAnO,EAAAN,EAAAM,SACAR,EAAA2O,EAAAzO,EAAAR,OAEAM,EAAA4G,UAAA4B,IAAAhI,EAAAnF,QAAAQ,WAEAsH,EAAAnD,GAAAD,QAAA,SAAA6K,GACAA,EAAAhE,UAAAhH,OAAAY,EAAAnF,QAAAQ,cAWA4M,YAAA,SAAAkG,GACAA,EAAAzO,EAAAR,OAAAkH,UAAAhH,OAAAM,EAAAM,SAAAnF,QAAAQ,YASA2S,YAAA,WACA,QAAAtR,EAAA,EAAqBA,EAAAmC,KAAAuC,GAAAzE,OAAoBD,IACzCmC,KAAAgL,KAAAhL,KAAAuC,GAAA1E,GAAAuJ,WAUAmI,eAAA,WACA,QAAA1R,EAAA,EAAqBA,EAAAmC,KAAAuC,GAAAzE,OAAoBD,IACzCmC,KAAAiL,OAAAjL,KAAAuC,GAAA1E,GAAAuJ,WAWA4D,KAAA,SAAAwE,GACA,QAAA3R,EAAA,EAAqBA,EAAA2R,EAAA1R,OAAqBD,IAC1CkN,EAAA3K,IAAA,sBAAAoP,EAAA3R,GAAAmC,KAAA0O,QAWAzD,OAAA,SAAAuE,GACA,QAAA3R,EAAA,EAAqBA,EAAA2R,EAAA1R,OAAqBD,IAC1CkN,EAAAG,KAAA,sBAAAsE,EAAA3R,KAaA6Q,MAAA,SAAAxO,GACAA,EAAAuN,iBAEApI,EAAAzD,IAAAC,KAAAwD,EAAAW,UAAA8C,QAAA5I,EAAAuP,cAAAX,aAAA,sBAkCA,OA9BApP,EAAAuP,EAAA,SAMA9M,IAAA,WACA,OAAA8M,EAAA1M,MASAuF,EAAA1H,IAAA,uCACA6O,EAAAG,cAOAtH,EAAA1H,GAAA,qBACA6O,EAAAM,iBACAN,EAAAI,eACAtE,EAAAI,YAGA8D,GAmXAS,SAhXA,SAAA7O,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEAiL,GAMAhO,MAAA,WACAb,EAAAM,SAAAhG,UACA6E,KAAAgL,QAUAA,KAAA,WACAD,EAAA3K,GAAA,QAAAsH,SAAA1H,KAAA2P,QASA1E,OAAA,WACAF,EAAAG,IAAA,QAAAxD,WAUAiI,MAAA,SAAAzP,GACA,KAAAA,EAAA0P,SACAvK,EAAAzD,IAAAC,KAAAwD,EAAAW,UAAA8C,QAAA,MAGA,KAAA5I,EAAA0P,SACAvK,EAAAzD,IAAAC,KAAAwD,EAAAW,UAAA8C,QAAA,QA8BA,OApBAhB,EAAA1H,IAAA,+BACAsP,EAAAzE,WAOAnD,EAAA1H,GAAA,oBACAsP,EAAAhO,UAOAoG,EAAA1H,GAAA,qBACA2K,EAAAI,YAGAuE,GA8RAG,SA3RA,SAAAhP,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAEAoL,GAMAnO,MAAA,WACA1B,KAAAuM,QAEA1L,EAAAM,SAAAjG,YACA8E,KAAAgL,QAWAuB,MAAA,WACA,IAAAvC,EAAAhK,KAEAa,EAAAM,SAAAlG,UACAsE,EAAAS,KAAAuC,MACAvC,KAAAuC,GAAAuN,YAAA,WACA9F,EAAA+F,OAEA1K,EAAAzD,IAAAC,KAAA,KAEAmI,EAAAuC,SACWvM,KAAAgQ,QAWXD,KAAA,WACA/P,KAAAuC,GAAA0N,cAAAjQ,KAAAuC,KASAyI,KAAA,WACA,IAAAkF,EAAAlQ,KAEA+K,EAAA3K,GAAA,YAAAiF,EAAAwB,KAAAC,KAAA,WACAoJ,EAAAH,SAGAhF,EAAA3K,GAAA,WAAAiF,EAAAwB,KAAAC,KAAA,WACAoJ,EAAA3D,WAUAtB,OAAA,WACAF,EAAAG,KAAA,wBAAA7F,EAAAwB,KAAAC,QAqEA,OAjEApH,EAAAmQ,EAAA,QAOA1N,IAAA,WACA,IAAAlH,EAAAoK,EAAAwB,KAAAI,OAAApG,EAAAR,OAAAyO,aAAA,uBAEA,OACA7P,EADAhE,GAIA4F,EAAAM,SAAAlG,aASA6M,EAAA1H,IAAA,+BACAyP,EAAA5E,WAWAnD,EAAA1H,IAAA,kEACAyP,EAAAE,SASAjI,EAAA1H,IAAA,2CACAyP,EAAAtD,UAOAzE,EAAA1H,GAAA,oBACAyP,EAAAnO,UAOAoG,EAAA1H,GAAA,qBACA2K,EAAAI,YAGA0E,GAuIAM,YApHA,SAAAtP,EAAAwE,EAAAyC,GAMA,IAAAiD,EAAA,IAAAtG,EAOAtD,EAAAN,EAAAM,SAOAoF,EAAApF,EAAApF,YAMAwK,EAAAD,EAAAC,GAOA,IAAA5L,EAAA6D,KAA4B2C,GAE5BgP,GAOAC,MAAA,SAAA7J,GACA,YAAAhC,OAAA8L,WACA,QAAAC,KAAA/J,EACA,GAAAA,EAAA3H,eAAA0R,IACA/L,OAAA8L,WAAA,eAAAC,EAAA,OAAAC,QACA,OAAAhK,EAAA+J,GAMA,OAAA3V,IAoCA,OA5BA6D,EAAA2C,EAAAgP,EAAAC,MAAA7J,IAMAwE,EAAA3K,GAAA,SAAAmE,OAAA3I,EAAA,WACA4C,EAAA2C,EAAAgP,EAAAC,MAAA7J,KACG1F,EAAAM,SAAAvF,WAMHkM,EAAA1H,GAAA,oBACAmG,EAAAD,EAAAC,GAEA5L,EAAA6D,KAA0B2C,KAO1B2G,EAAA1H,GAAA,qBACA2K,EAAAG,IAAA,SAAA3G,UAGA4L,IA8BAtP,EAAA,SAAA2P,GAGA,SAAA3P,IAEA,OADAxD,EAAA2C,KAAAa,GACA/B,EAAAkB,MAAAa,EAAA4P,WAAAtS,OAAAuS,eAAA7P,IAAAwC,MAAArD,KAAAtB,YAWA,OAzuGA,SAAAiS,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAApT,UAAA,kEAAAoT,GAGAD,EAAAvT,UAAAe,OAAA0S,OAAAD,KAAAxT,WACAD,aACA+B,MAAAyR,EACA3S,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA2S,IAAAzS,OAAA2S,eAAA3S,OAAA2S,eAAAH,EAAAC,GAAAD,EAAAF,UAAAG,GA6sGAG,CAAAlQ,EAgBCD,GATDnD,EAAAoD,IACAxC,IAAA,QACAa,MAAA,WACA,IAAAmC,EAAA3C,UAAAZ,OAAA,QAAAiC,IAAArB,UAAA,GAAAA,UAAA,MAEA,OA/vGA,SAAAyD,EAAA6O,EAAAxI,EAAAyI,GACA,OAAAD,MAAAE,SAAA9T,WACA,IAAA+T,EAAAhT,OAAAiT,yBAAAJ,EAAAxI,GAEA,QAAAzI,IAAAoR,EAAA,CACA,IAAAE,EAAAlT,OAAAuS,eAAAM,GAEA,cAAAK,OACA,EAEAlP,EAAAkP,EAAA7I,EAAAyI,GAEG,aAAAE,EACH,OAAAA,EAAAjS,MAEA,IAAAoS,EAAAH,EAAAhP,IAEA,YAAApC,IAAAuR,EAIAA,EAAAzS,KAAAoS,QAJA,EA8uGA9O,CAAAtB,EAAAzD,UAAAqT,WAAAtS,OAAAuS,eAAA7P,EAAAzD,WAAA,QAAA4C,MAAAnB,KAAAmB,KAAAxB,KAA2HoI,EAAAvF,QAG3HR,EAhBA,GAmBAnG,EAAA,0BC3gHA,IAAA6W,EAGAA,EAAA,WACA,OAAAvR,KADA,GAIA,IAEAuR,KAAAL,SAAA,cAAAA,KAAA,EAAAM,MAAA,QACC,MAAAC,GAED,iBAAAlN,SAAAgN,EAAAhN,QAOAmN,EAAAC,QAAAJ,gCCnBA,IAAAK,EACqjCH,sHAArjClN,OAAAsN,kBAAAzU,UAAA0U,UAAAD,QAAAzU,UAAA0U,QAAA,SAAAL,GAAmF,IAAA7J,EAAA5D,GAAAhE,KAAA0H,UAAA1H,KAAA+R,eAAAtD,iBAAAgD,GAAAnP,EAAAtC,KAAuE,GAAG,IAAA4H,EAAA5D,EAAAlG,SAAe8J,GAAA,GAAA5D,EAAArD,KAAAiH,KAAAtF,WAAyBsF,EAAA,IAAAtF,IAAA0P,gBAAgC,OAAA1P,IAAS,WAAc,SAAAmP,IAAA7J,GAAgBA,MAAMqK,SAAA,EAAAC,YAAA,EAAAC,YAAA,GAAwC,IAAAnO,EAAA0D,SAAA0K,YAAA,eAA0C,OAAApO,EAAAqO,gBAAAZ,EAAA7J,EAAAqK,QAAArK,EAAAsK,WAAAtK,EAAAuK,QAAAnO,EAA8D,sBAAAO,OAAA+N,YAAA,SAAkDb,EAAArU,UAAAmH,OAAAgO,MAAAnV,UAAAmH,OAAA+N,YAAAb,EAAtO,GAA8R,WAAgB,QAAAA,EAAA,EAAA7J,GAAA,yBAAA5D,EAAA,EAA4CA,EAAA4D,EAAA9J,SAAAyG,OAAAiO,wBAA0CxO,EAAAO,OAAAiO,sBAAAjO,OAAAqD,EAAA5D,GAAA,yBAAAO,OAAAkO,qBAAAlO,OAAAqD,EAAA5D,GAAA,yBAAAO,OAAAqD,EAAA5D,GAAA,+BAAkLO,OAAAiO,wBAAAjO,OAAAiO,sBAAA,SAAA5K,EAAA5D,GAA0E,IAAA1B,GAAA,IAAAK,MAAAC,UAAA/E,EAAAuM,KAAAC,IAAA,MAAA/H,EAAAmP,IAAAhX,EAAA8J,OAAAZ,WAAA,WAAkFiE,EAAAtF,EAAAzE,IAAOA,GAAK,OAAA4T,EAAAnP,EAAAzE,EAAApD,IAAe8J,OAAAkO,uBAAAlO,OAAAkO,qBAAA,SAAAhB,GAAwEhO,aAAAgO,KAAvhB,GAAyiBA,OAA+J,IAAAiB,IAAA,oBAAAnO,cAAAvE,UAApED,KAAxE6R,EAAA,WAA4D,OAAgF,SAAAH,GAAwF,aAAa,IAAA7J,GAAO+K,OAAA,uBAAAC,OAAA,KAAAC,gBAAA,EAAAC,MAAA,IAAAC,MAAA,EAAAlK,OAAA,EAAAmK,OAAA,iBAAAC,aAAA,KAAAC,WAAA,EAAAC,UAAA,EAAAC,YAAA,GAA6S9Q,EAAA,WAAc,QAAAmP,KAAY7J,EAAA,EAAKA,EAAAlJ,UAAAZ,OAAmB8J,KAAA,SAAAA,GAAkB,QAAA5D,KAAA4D,IAAAhJ,eAAAoF,KAAAyN,EAAAzN,GAAA4D,EAAA5D,IAAlB,CAAkEtF,UAAAkJ,IAAgB,OAAA6J,GAAqGhX,EAAA,SAAAmN,GAAe,OAAAzI,SAAAsS,EAAA4B,iBAAAzL,GAAA0L,OAAA,KAAiDC,EAAA,SAAA9B,GAAe,IAAA7J,EAAM,IAAIA,EAAA4L,mBAAA/B,GAAwB,MAAAzN,GAAS4D,EAAA6J,EAAI,OAAA7J,GAAS6L,EAAA,SAAAhC,GAAe,MAAAA,EAAAiC,OAAA,KAAAjC,IAAAxF,OAAA,IAAmC,QAAArE,EAAA5D,EAAA2P,OAAAlC,GAAAnP,EAAA0B,EAAAlG,OAAAD,GAAA,EAAApD,EAAA,GAAA8Y,EAAAvP,EAAA4P,WAAA,KAA6D/V,EAAAyE,GAAM,CAAE,QAAAsF,EAAA5D,EAAA4P,WAAA/V,IAAA,UAAAgW,sBAAA,iDAA4GpZ,GAAAmN,GAAA,GAAAA,GAAA,SAAAA,GAAA,IAAA/J,GAAA+J,GAAA,IAAAA,GAAA,QAAA/J,GAAA+J,GAAA,IAAAA,GAAA,SAAA2L,EAAA,KAAA3L,EAAAkM,SAAA,QAAAlM,GAAA,UAAAA,GAAA,KAAAA,MAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA5D,EAAA0P,OAAA7V,GAAA,KAAAmG,EAAA0P,OAAA7V,GAAmM,IAAA4V,EAAM,IAAIA,EAAAD,mBAAA,IAAA/Y,GAA4B,MAAAgX,GAASgC,EAAA,IAAAhZ,EAAQ,OAAAgZ,GAA2oBM,EAAA,WAAc,OAAA3J,KAAAC,IAAA3C,SAAAsM,KAAAC,aAAAvM,SAAAwM,gBAAAD,aAAAvM,SAAAsM,KAAAG,aAAAzM,SAAAwM,gBAAAC,aAAAzM,SAAAsM,KAAAI,aAAA1M,SAAAwM,gBAAAE,eAAiXC,EAAA,SAAA5C,GAAe,OAAAA,EAAAhX,EAAAgX,KAAA6C,UAAA,GAA4XC,EAAA,SAAA3M,EAAA5D,EAAA1B,EAAAzE,GAAqB,GAAAmG,EAAAoP,YAAA,mBAAA3B,EAAAa,YAAA,CAAmD,IAAA7X,EAAA,IAAA6X,YAAA1K,GAAyBqK,SAAA,EAAAE,QAAmBqC,OAAAlS,EAAAmS,OAAA5W,KAAqB6J,SAAAgN,cAAAja,KAA4B,gBAAAA,EAAAka,GAAqB,IAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAuBC,aAAA,SAAAzD,GAA2BgB,qBAAAuC,KAAA,KAAAvD,GAAA8C,EAAA,eAAAhD,IAAsD4D,cAAA,SAAAnR,EAAAnG,EAAApD,GAAiC,IAAA8Y,EAAAjR,EAAAiP,GAAA3J,EAAAnN,OAAkBgZ,EAAA,oBAAAtV,OAAAf,UAAA0W,SAAAjV,KAAAmF,GAAA2Q,EAAAlB,IAAAzP,EAAAoR,QAAA,KAAApR,EAAiF,GAAAyP,GAAAkB,EAAA,CAAS,IAAAU,EAAA5D,EAAA6D,YAAoB/B,EAAAX,SAAAiC,MAAAnN,SAAAV,cAAAuM,EAAAX,SAAAkC,MAAAT,EAAAQ,IAA+D,IAAAD,EAAAG,EAAAQ,EAAAC,EAAA/B,EAAAzP,EAA1iC,SAAA4D,EAAA5D,EAAA1B,EAAAzE,GAAqB,IAAApD,EAAA,EAAQ,GAAAmN,EAAA6N,aAAA,GAAqBhb,GAAAmN,EAAA0M,UAAA1M,IAAA6N,mBAAgC7N,GAAS,OAAAnN,EAAA2P,KAAAC,IAAA5P,EAAAuJ,EAAA1B,EAAA,GAAAzE,IAAApD,EAAA2P,KAAA0B,IAAArR,EAAAsZ,IAAAtC,EAAAiE,cAAAjb,EAA+8Bkb,CAAAhB,EAAAG,EAAA3V,SAAA,mBAAAoU,EAAA1K,OAAA0K,EAAA1K,OAAA7E,EAAAnG,GAAA0V,EAAA1K,OAAA,IAAA0K,EAAAR,MAAA6C,EAAAJ,EAAAH,EAAAQ,EAAA9B,IAAA+B,EAAA,EAAAC,EAAA,SAAAnO,EAAAtF,GAA8H,IAAA7H,EAAAgX,EAAA6D,YAAoB,GAAA1N,GAAAtF,GAAA7H,GAAA6H,IAAA+S,EAAA/S,GAAAmP,EAAAiE,YAAAjb,IAAAob,EAAA,OAAAZ,EAAAC,cAAA,GAAl0B,SAAAtN,EAAA5D,EAAA1B,GAAmB,IAAAsF,GAAAF,SAAAsM,KAAAgC,QAAA1T,IAAAsF,EAAAoO,QAAAtO,SAAAuO,gBAAArO,MAAAiH,aAAA,iBAAAjH,EAAAoO,QAAApO,EAAAM,MAAAgO,QAAA,QAAAzE,EAAA0E,SAAA,EAAAnS,IAA+yBoS,CAAApS,EAAA1B,EAAAmR,GAAAc,EAAA,aAAAhB,EAAAvP,EAAAnG,GAAA+W,EAAA,KAAAI,EAAA,SAAmHqB,EAAA,SAAAzO,GAAegN,MAAAhN,GAAAmN,GAAAe,GAAAlO,EAAAgN,GAAAzV,SAAAoU,EAAAT,MAAA,IAAAyC,EAAAF,EAAAO,EAAlqE,SAAAnE,EAAA7J,GAAiB,IAAA5D,EAAM,qBAAAyN,EAAAuB,SAAAhP,EAAA4D,KAAA,gBAAA6J,EAAAuB,SAAAhP,EAAA4D,GAAA,EAAAA,IAAA,kBAAA6J,EAAAuB,SAAAhP,EAAA4D,EAAA,KAAAA,KAAA,IAAAA,KAAA,mBAAA6J,EAAAuB,SAAAhP,EAAA4D,OAAA,iBAAA6J,EAAAuB,SAAAhP,IAAA4D,MAAA,sBAAA6J,EAAAuB,SAAAhP,EAAA4D,EAAA,KAAAA,SAAA,MAAAA,EAAA,MAAAA,EAAA,sBAAA6J,EAAAuB,SAAAhP,EAAA4D,SAAA,iBAAA6J,EAAAuB,SAAAhP,EAAA,KAAA4D,SAAA,mBAAA6J,EAAAuB,SAAAhP,EAAA4D,EAAA,KAAAA,QAAA,MAAAA,SAAA,gBAAA6J,EAAAuB,SAAAhP,EAAA4D,WAAA,iBAAA6J,EAAAuB,SAAAhP,EAAA,IAAA4D,WAAA,mBAAA6J,EAAAuB,SAAAhP,EAAA4D,EAAA,MAAAA,UAAA,OAAAA,WAAA6J,EAAAwB,eAAAjP,EAAAyN,EAAAwB,aAAArL,IAAA5D,GAAA4D,EAA2oE0O,CAAA/C,EAAAwB,IAAA,IAAAA,GAAAtD,EAAA0E,SAAA,EAAA/L,KAAAE,MAAAiL,IAAAQ,EAAAR,EAAAC,KAAAR,EAAAvD,EAAAe,sBAAA6D,GAAAzB,EAAAhN,IAAwI,IAAA6J,EAAA6D,aAAA7D,EAAA0E,SAAA,KAA9vC,SAAA1E,EAAA7J,EAAA5D,GAAmB4D,GAAA2O,QAAAC,WAAAxS,EAAAkP,WAAAqD,QAAAC,WAAsDC,aAAAC,KAAAC,UAAA3S,GAAAwQ,OAAA/C,EAAAmF,IAA2ClP,SAAAmP,MAAApF,IAAA/J,SAAAwM,gBAAA,WAAAzC,EAAAmF,IAA0oCE,CAAA9S,EAAAyP,EAAAF,GAAAgB,EAAA,cAAAhB,EAAAvP,EAAAnG,GAAAoX,EAAAC,cAAA,GAAAzD,EAAAe,sBAAA6D,MAAmHd,EAAA,SAAA3N,GAAkB,KAAzmG,eAAA6J,KAAApB,WAAA,4BAAAE,UAAymG,IAAA3I,EAAAmP,SAAAnP,EAAAoP,UAAApP,EAAAqP,SAAA,YAAArP,EAAAjK,SAAAiX,EAAAhN,EAAAjK,OAAAmU,QAAArX,KAAA,MAAAma,EAAAQ,QAAA8B,gBAAAtP,EAAAjK,OAAAmU,QAAAP,EAAAoB,SAAAiC,EAAAuC,WAAA1F,EAAA2F,SAAAD,UAAAvC,EAAAyC,WAAA5F,EAAA2F,SAAAC,UAAA,IAAAC,KAAA1C,EAAA2C,MAAA,CAAgP,IAAAvT,EAAAyP,EAAAF,EAAAqB,EAAA4C,OAAAlV,EAAAiP,EAAAsB,gBAAA,MAAA7O,EAAA0D,SAAAwM,gBAAAxM,SAAAV,cAAAhD,IAAkG1B,KAAA,SAAA0B,EAAA1B,EAAAoF,SAAAwM,mBAAAtM,EAAA6F,iBAAAwH,EAAAE,cAAA7S,EAAAsS,MAAyFY,EAAA,SAAA/D,GAAe,GAAA8E,QAAAkB,MAAAhB,cAAAF,QAAAkB,MAAAhB,eAAAC,KAAAC,UAAApF,IAAAgF,QAAAkB,MAAAjD,OAAA,CAAqG,IAAA5M,EAAAF,SAAAV,cAAAyM,EAAAF,EAAAgD,QAAAkB,MAAAjD,UAAyD5M,GAAAqN,EAAAE,cAAAvN,EAAA,MAA2BsL,WAAA,MAAgB0C,EAAA,SAAAnE,GAAesD,MAAApR,WAAA,WAA6BoR,EAAA,KAAAD,EAAAT,EAAAQ,IAAc,MAAQ,OAAAI,EAAA9J,QAAA,WAA4BoG,IAAA7J,SAAA5C,oBAAA,QAAAyQ,GAAA,GAAA9D,EAAA3M,oBAAA,SAAA8Q,GAAA,GAAAnE,EAAA3M,oBAAA,WAAA0Q,GAAA,GAAAP,EAAAC,eAAA3D,EAAA,KAAAqD,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,OAA8LC,EAAAyC,KAAA,SAAA7Z,GAAoB,KAA/yI,kBAAA6J,UAAA,qBAAA+J,GAAA,0BAAAA,GAAA,YAAAA,EAAAI,QAAAzU,WAA+yI,sGAA8G6X,EAAA9J,UAAAoG,EAAAjP,EAAAsF,EAAA/J,OAAuBgX,EAAAtD,EAAAqB,OAAAlL,SAAAV,cAAAuK,EAAAqB,QAAA,KAAAkC,EAAAT,EAAAQ,GAAAnN,SAAA7C,iBAAA,QAAA0Q,GAAA,GAAAV,GAAApD,EAAA5M,iBAAA,SAAA+Q,GAAA,GAAArE,EAAA2B,WAAA3B,EAAA4B,UAAA1B,EAAA5M,iBAAA,WAAA2Q,GAAA,IAAoMP,EAAAyC,KAAA/C,GAAAM,GAA1+JrN,CAAA6J,IAAYpO,MAAAsO,SAAAD,EAAAC,QAAAC","file":"0.app.js","sourcesContent":["/*!\n * Glide.js v3.0.4\n * (c) 2013-2018 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide$2 = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = _extends({}, this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nvar Run = function (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            this._o = true;\n\n            Glide.index = 0;\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            this._o = true;\n\n            Glide.index = length;\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n};\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nvar Gaps = function (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.gap;\n    },\n\n\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps._v;\n    },\n\n\n    /**\n     * Sets value of the gap.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      Gaps._v = toInt(value);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Remount component:\n   * - on updating via API, to update gap value\n   */\n  Events.on('update', function () {\n    Gaps.mount();\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n};\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  var n = node.parentNode.firstChild;\n  var matched = [];\n\n  for (; n; n = n.nextSibling) {\n    if (n.nodeType === 1 && n !== node) {\n      matched.push(n);\n    }\n  }\n\n  return matched;\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nvar Html = function (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n};\n\nvar Peek = function (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n};\n\nvar Move = function (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n};\n\nvar Sizes = function (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = this.slideWidth + 'px';\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n};\n\nvar Build = function (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      slide.classList.add(classes.activeSlide);\n\n      siblings(slide).forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n};\n\nvar Clones = function (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.pattern = this.map();\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Generate pattern of the cloning.\n     *\n     * @return {Void}\n     */\n    map: function map() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var perView = Glide.settings.perView;\n      var length = Components.Html.slides.length;\n\n      // Repeat creating pattern based on the ratio calculated\n      // by number in `perView` per actual number of slides.\n      for (var r = 0; r < Math.max(1, Math.floor(perView / length)); r++) {\n        // Fill pattern with indexes of slides at the beginning of track.\n        for (var i = 0; i <= length - 1; i++) {\n          pattern.push('' + i);\n        }\n\n        // Fill pattern with indexes of slides from the end of track.\n        for (var _i = length - 1; _i >= 0; _i--) {\n          pattern.unshift('-' + _i);\n        }\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var pattern = this.pattern;\n\n\n      for (var i = 0; i < pattern.length; i++) {\n        var clone = Components.Html.slides[Math.abs(pattern[i])].cloneNode(true);\n\n        clone.classList.add(Glide.settings.classes.cloneSlide);\n\n        items.push(clone);\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items,\n          pattern = this.pattern;\n\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        item.style.width = Components.Sizes.slideWidth + 'px';\n\n        // Append clone if pattern position is positive.\n        // Prepend clone if pattern position is negative.\n        if (pattern[i][0] === '-') {\n          Components.Html.wrapper.insertBefore(item, Components.Html.slides[0]);\n        } else {\n          Components.Html.wrapper.appendChild(item);\n        }\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        items[i].remove();\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n};\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], false);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], false);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nvar Resize = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n};\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nvar Direction = function (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n};\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar Rtl = function (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n};\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar Gap = function (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n};\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar Grow = function (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n};\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar Peeking = function (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n};\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar Focusing = function (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n};\n\n/**\n * Collection of transformers.\n *\n * @type {Array}\n */\nvar MUTATORS = [Gap, Grow, Peeking, Focusing,\n// It's important that the Rtl component\n// be last on the list, so it reflects\n// all previous transformations.\nRtl];\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nvar transformer = function (Glide, Components) {\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < MUTATORS.length; i++) {\n        translate = MUTATORS[i](Glide, Components).modify(translate);\n      }\n\n      return translate;\n    }\n  };\n};\n\nvar Translate = function (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = transformer(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n};\n\nvar Transition = function (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n};\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nvar Swipe = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < settings.touchAngle) {\n          Components.Move.make(subExSx * parseFloat(settings.touchRatio));\n        }\n\n        if (swipeSin * 180 / Math.PI < settings.touchAngle) {\n          event.stopPropagation();\n          event.preventDefault();\n\n          Components.Html.root.classList.add(settings.classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, this.start.bind(this));\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, this.start.bind(this));\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(this.move.bind(this), Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      Binder.on(END_EVENTS, Components.Html.wrapper, this.end.bind(this));\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n};\n\nvar Images = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n};\n\nvar Anchors = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.stopPropagation();\n\n      if (prevented) {\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n\n          this.items[i].setAttribute('data-href', undefined);\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n};\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nvar Controls = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._i = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._i.length; i++) {\n        this.bind(this._i[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._i.length; i++) {\n        this.unbind(this._i[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on(['click', 'touchstart'], elements[i], this.click);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._i;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n};\n\nvar Keyboard = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n};\n\nvar Autoplay = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n};\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nvar Breakpoints = function (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings\n   *\n   * @type {Object}\n   */\n  var points = settings.breakpoints;\n\n  /**\n   * Sort breakpoints from smaller to larger. It is required in order\n   * to proper matching currently active breakpoint settings.\n   */\n  points = sortBreakpoints(points);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    _extends(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n};\n\n// Required components\n// Optional components\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = function (_Core) {\n  inherits(Glide, _Core);\n\n  function Glide() {\n    classCallCheck(this, Glide);\n    return possibleConstructorReturn(this, (Glide.__proto__ || Object.getPrototypeOf(Glide)).apply(this, arguments));\n  }\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide.prototype.__proto__ || Object.getPrototypeOf(Glide.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide;\n}(Glide$2);\n\nexport default Glide;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! smooth-scroll v14.2.0 | (c) 2018 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/smooth-scroll */\nwindow.Element&&!Element.prototype.closest&&(Element.prototype.closest=function(e){var t,n=(this.document||this.ownerDocument).querySelectorAll(e),o=this;do{for(t=n.length;--t>=0&&n.item(t)!==o;);}while(t<0&&(o=o.parentElement));return o}),(function(){function e(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var n=document.createEvent(\"CustomEvent\");return n.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),n}if(\"function\"==typeof window.CustomEvent)return!1;e.prototype=window.Event.prototype,window.CustomEvent=e})(),(function(){for(var e=0,t=[\"ms\",\"moz\",\"webkit\",\"o\"],n=0;n<t.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[t[n]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[t[n]+\"CancelAnimationFrame\"]||window[t[n]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t,n){var o=(new Date).getTime(),i=Math.max(0,16-(o-e)),r=window.setTimeout((function(){t(o+i)}),i);return e=o+i,r}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})})(),(function(e,t){\"function\"==typeof define&&define.amd?define([],(function(){return t(e)})):\"object\"==typeof exports?module.exports=t(e):e.SmoothScroll=t(e)})(\"undefined\"!=typeof global?global:\"undefined\"!=typeof window?window:this,(function(e){\"use strict\";var t={ignore:\"[data-scroll-ignore]\",header:null,topOnEmptyHash:!0,speed:500,clip:!0,offset:0,easing:\"easeInOutCubic\",customEasing:null,updateURL:!0,popstate:!0,emitEvents:!0},n=function(){return\"querySelector\"in document&&\"addEventListener\"in e&&\"requestAnimationFrame\"in e&&\"closest\"in e.Element.prototype},o=function(){for(var e={},t=0;t<arguments.length;t++)!(function(t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(arguments[t]);return e},i=function(t){return!!(\"matchMedia\"in e&&e.matchMedia(\"(prefers-reduced-motion)\").matches)},r=function(t){return parseInt(e.getComputedStyle(t).height,10)},a=function(e){var t;try{t=decodeURIComponent(e)}catch(n){t=e}return t},c=function(e){\"#\"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),o=n.length,i=-1,r=\"\",a=n.charCodeAt(0);++i<o;){if(0===(t=n.charCodeAt(i)))throw new InvalidCharacterError(\"Invalid character: the input contains U+0000.\");t>=1&&t<=31||127==t||0===i&&t>=48&&t<=57||1===i&&t>=48&&t<=57&&45===a?r+=\"\\\\\"+t.toString(16)+\" \":r+=t>=128||45===t||95===t||t>=48&&t<=57||t>=65&&t<=90||t>=97&&t<=122?n.charAt(i):\"\\\\\"+n.charAt(i)}var c;try{c=decodeURIComponent(\"#\"+r)}catch(e){c=\"#\"+r}return c},u=function(e,t){var n;return\"easeInQuad\"===e.easing&&(n=t*t),\"easeOutQuad\"===e.easing&&(n=t*(2-t)),\"easeInOutQuad\"===e.easing&&(n=t<.5?2*t*t:(4-2*t)*t-1),\"easeInCubic\"===e.easing&&(n=t*t*t),\"easeOutCubic\"===e.easing&&(n=--t*t*t+1),\"easeInOutCubic\"===e.easing&&(n=t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1),\"easeInQuart\"===e.easing&&(n=t*t*t*t),\"easeOutQuart\"===e.easing&&(n=1- --t*t*t*t),\"easeInOutQuart\"===e.easing&&(n=t<.5?8*t*t*t*t:1-8*--t*t*t*t),\"easeInQuint\"===e.easing&&(n=t*t*t*t*t),\"easeOutQuint\"===e.easing&&(n=1+--t*t*t*t*t),\"easeInOutQuint\"===e.easing&&(n=t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t),e.customEasing&&(n=e.customEasing(t)),n||t},s=function(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},l=function(t,n,o,i){var r=0;if(t.offsetParent)do{r+=t.offsetTop,t=t.offsetParent}while(t);return r=Math.max(r-n-o,0),i&&(r=Math.min(r,s()-e.innerHeight)),r},m=function(e){return e?r(e)+e.offsetTop:0},d=function(e,t,n){t||history.pushState&&n.updateURL&&history.pushState({smoothScroll:JSON.stringify(n),anchor:e.id},document.title,e===document.documentElement?\"#top\":\"#\"+e.id)},f=function(t,n,o){0===t&&document.body.focus(),o||(t.focus(),document.activeElement!==t&&(t.setAttribute(\"tabindex\",\"-1\"),t.focus(),t.style.outline=\"none\"),e.scrollTo(0,n))},h=function(t,n,o,i){if(n.emitEvents&&\"function\"==typeof e.CustomEvent){var r=new CustomEvent(t,{bubbles:!0,detail:{anchor:o,toggle:i}});document.dispatchEvent(r)}};return function(r,p){var g,v,w,y,E,b,S,A={};A.cancelScroll=function(e){cancelAnimationFrame(S),S=null,e||h(\"scrollCancel\",g)},A.animateScroll=function(n,i,r){var a=o(g||t,r||{}),c=\"[object Number]\"===Object.prototype.toString.call(n),p=c||!n.tagName?null:n;if(c||p){var v=e.pageYOffset;a.header&&!y&&(y=document.querySelector(a.header)),E||(E=m(y));var w,b,C,O=c?n:l(p,E,parseInt(\"function\"==typeof a.offset?a.offset(n,i):a.offset,10),a.clip),I=O-v,q=s(),F=0,L=function(t,o){var r=e.pageYOffset;if(t==o||r==o||(v<o&&e.innerHeight+r)>=q)return A.cancelScroll(!0),f(n,o,c),h(\"scrollStop\",a,n,i),w=null,S=null,!0},H=function(t){w||(w=t),F+=t-w,b=F/parseInt(a.speed,10),b=b>1?1:b,C=v+I*u(a,b),e.scrollTo(0,Math.floor(C)),L(C,O)||(S=e.requestAnimationFrame(H),w=t)};0===e.pageYOffset&&e.scrollTo(0,0),d(n,c,a),h(\"scrollStart\",a,n,i),A.cancelScroll(!0),e.requestAnimationFrame(H)}};var C=function(t){if(!i()&&0===t.button&&!t.metaKey&&!t.ctrlKey&&\"closest\"in t.target&&(w=t.target.closest(r))&&\"a\"===w.tagName.toLowerCase()&&!t.target.closest(g.ignore)&&w.hostname===e.location.hostname&&w.pathname===e.location.pathname&&/#/.test(w.href)){var n=c(a(w.hash)),o=g.topOnEmptyHash&&\"#\"===n?document.documentElement:document.querySelector(n);o=o||\"#top\"!==n?o:document.documentElement,o&&(t.preventDefault(),A.animateScroll(o,w))}},O=function(e){if(history.state.smoothScroll&&history.state.smoothScroll===JSON.stringify(g)&&history.state.anchor){var t=document.querySelector(c(a(history.state.anchor)));t&&A.animateScroll(t,null,{updateURL:!1})}},I=function(e){b||(b=setTimeout((function(){b=null,E=m(y)}),66))};return A.destroy=function(){g&&(document.removeEventListener(\"click\",C,!1),e.removeEventListener(\"resize\",I,!1),e.removeEventListener(\"popstate\",O,!1),A.cancelScroll(),g=null,v=null,w=null,y=null,E=null,b=null,S=null)},A.init=function(i){if(!n())throw\"Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.\";A.destroy(),g=o(t,i||{}),y=g.header?document.querySelector(g.header):null,E=m(y),document.addEventListener(\"click\",C,!1),y&&e.addEventListener(\"resize\",I,!1),g.updateURL&&g.popstate&&e.addEventListener(\"popstate\",O,!1)},A.init(p),A}}));"],"sourceRoot":""}